diff --git a/aten/src/THC/THCTensorMathReduce.cuh b/aten/src/THC/THCTensorMathReduce.cuh
index d118f5dd3..dda7f3c9c 100644
--- a/aten/src/THC/THCTensorMathReduce.cuh
+++ b/aten/src/THC/THCTensorMathReduce.cuh
@@ -73,14 +73,14 @@ struct SquareFunctor {
 template <typename T>
 struct ReduceMin {
   inline __device__ T operator()(T a, T b) const {
-    return (THCNumerics<T>::lt(a, b) || THCNumerics<T>::isnan(a)) ? a : b;
+    return ((int)THCNumerics<T>::sub(a, b) < 0 || THCNumerics<T>::isnan(a)) ? a : b;
   }
 };
 
 template <typename T>
 struct ReduceMax {
   inline __device__ T operator()(T a, T b) const {
-    return (THCNumerics<T>::gt(a, b) || THCNumerics<T>::isnan(a)) ? a : b;
+    return ((int)THCNumerics<T>::sub(a, b) > 0 || THCNumerics<T>::isnan(a)) ? a : b;
   }
 };
 
@@ -108,6 +108,7 @@ __global__ void THCTensor_kernel_renorm(T *data,
                                         const AccT value, 
                                         const ptrdiff_t size, 
                                         const AccT maxnorm) {
+#if !defined(__HIP_DEVICE_COMPILE__)
   __shared__ AccT buffer[32];
   int64_t tx = threadIdx.x;
   int64_t bx = blockIdx.x;
@@ -163,6 +164,7 @@ __global__ void THCTensor_kernel_renorm(T *data,
       row[i] = scalar_cast<T>(THCNumerics<AccT>::mul(val, norm));
     }
   }
+#endif
 }
 
 template <typename T>
